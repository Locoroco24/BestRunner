{"version":3,"sources":["components/Styled.js","components/Popup/Popup.jsx","components/SportTable/SortableData.js","store/types.js","store/actions.js","components/SportTable/Table.jsx","App.js","reportWebVitals.js","store/reducer.js","index.js"],"names":["container","css","Table","styled","table","Th","th","Td","td","hover","Button","button","wideBtn","addWorkoutBtn","closePopupBtn","H1","h1","H2","h2","H3","h3","P","p","Select","select","Div","div","Wrapper","manageBtn","deleteBtn","editBtn","formField","errorMassage","validationSchema","Yup","type","required","date","distance","positive","Popup","props","React","useState","modalIsOpen","setIsOpen","closeModal","initialValues","defaultValues","description","key","className","onClick","class","modalBtnType","isOpen","onRequestClose","ariaHideApp","onSubmit","value","window","confirm","manageRow","typeList","map","index","htmlFor","id","name","component","placeholder","maxLength","AcceptBtnType","useSortableData","items","config","sortConfig","setSortConfig","sortableItems","sort","a","b","direction","requestSort","ADD_WORKOUT","DELETE_WORKOUT","EDIT_WORKOUT","FILTER_WORKOUTS","GET_WORKOUTS","fetch","method","headers","response","json","result","workoutStore","dispatch","payload","addWorkout","workout","body","JSON","stringify","editWorkout","filterWorkouts","event","WorkoutTable","workouts","useSelector","store","filterType","filteredWorkouts","filter","item","getClassNamesFor","undefined","toggleSortType","target","onChange","deleteWorkout","App","useEffect","getWorkouts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","state","newState","findIndex","splice","createStore","action","compose","applyMiddleware","logger","thunk","app","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e09cec47.chunk.js","sourcesContent":["import styled from '@emotion/styled';\r\nimport {css} from '@emotion/css';\r\n\r\nexport const container = css`\r\n        width: 100%;\r\n        max-width: 1140px;\r\n        margin: 0 auto;\r\n        padding: 0 15px;\r\n        text-align: center;\r\n`\r\n\r\nexport const Table = styled.table`\r\n        margin-top: 20px;\r\n        width: 100%;\r\n        border: 3px #222 solid;\r\n        border-collapse: collapse;\r\n        `\r\n\r\nexport const Th = styled.th`\r\n        border: 3px #222 solid;\r\n        padding: 5px 25px;\r\n        color: #fff;\r\n        background: linear-gradient(0deg, #555, #000);\r\n        `\r\n\r\nexport const Td = styled.td`\r\n        border: 2px #222 solid;\r\n        padding: 5px 10px;\r\n        background: #fff;\r\n        text-align: center;\r\n        `\r\n\r\nconst hover = `\r\n        &:hover {\r\n        cursor: pointer;\r\n        opacity: 0.75;\r\n        }`\r\n\r\nexport const Button = styled.button`\r\n        position: relative;\r\n        background: none;\r\n        color: #fff;\r\n        font-family: inherit;\r\n        font-weight: inherit;\r\n        font-size: inherit;\r\n        border: none;\r\n        outline: none;\r\n        transition: opacity .4s;\r\n        ${hover}\r\n        &.ascending {\r\n            &:after {\r\n                content: '\\\\2B07';\r\n                position: absolute;\r\n                right: -15px;\r\n            }\r\n        }\r\n        &.descending {\r\n            &:after {\r\n                content: '\\\\2B06';\r\n                position: absolute;\r\n                right: -15px;\r\n            }\r\n        }\r\n        `\r\n\r\nexport const wideBtn = css`\r\n        max-width: 100%;\r\n        width: 300px;\r\n        padding: 5px 15px;\r\n        text-transform: uppercase;\r\n        font-family: inherit;\r\n        font-weight: inherit;\r\n        font-size: inherit;\r\n        border: none;\r\n        outline: none;\r\n        `\r\n\r\nexport const addWorkoutBtn = css`\r\n        ${wideBtn}\r\n        margin: 40px 0 15px;\r\n        color: #fff;\r\n        background: #000;\r\n        ${hover}\r\n        `\r\n\r\nexport const closePopupBtn = css`\r\n        ${wideBtn}\r\n        margin-bottom: 15px;\r\n        color: #222;\r\n        background: #ddd;\r\n        ${hover}\r\n        `\r\n\r\nexport const H1 = styled.h1`\r\n        margin-top: 30px;\r\n        text-align: center;\r\n        `\r\n\r\nexport const H2 = styled.h2`\r\n        text-align: center;\r\n        margin-bottom: 10px;\r\n        `\r\n\r\nexport const H3 = styled.h3`\r\n        text-align: center;\r\n        margin: 25px 0 15px;\r\n        `\r\n\r\nexport const P = styled.p`\r\n        margin-right: 20px;\r\n        `\r\n\r\nexport const Select = styled.select`\r\n        padding: 5px 10px;\r\n        &:hover {\r\n        cursor: pointer;\r\n        }\r\n        `\r\n\r\nexport const Div = styled.div`\r\n        max-width: 100%;\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        &.workoutType {\r\n        width: 300px;\r\n        flex-direction: row;\r\n        justify-content: space-between;\r\n        }\r\n        `\r\n\r\nexport const Wrapper = styled.div`\r\n        margin-top: 30px;\r\n        display: flex;\r\n        justify-content: flex-end;\r\n        align-items: center;\r\n        `\r\n\r\nexport const manageBtn = `\r\n        margin: 0 5px;\r\n        padding: 0;\r\n        border: none;\r\n        background: none;\r\n        outline: none;\r\n        transition: opacity .4s;\r\n        ${hover}\r\n        `\r\n\r\nexport const deleteBtn = css`\r\n        ${manageBtn}\r\n        &:after {\r\n        content: \"\\\\2716\";\r\n        border-radius: 3px;\r\n        padding: 3px 15px;\r\n        color: #fff;\r\n        background: #b44;\r\n        }\r\n        `\r\n\r\nexport const editBtn = css`\r\n        ${manageBtn}\r\n        &:after {\r\n        content: \"\\\\270E\";\r\n        border-radius: 3px;\r\n        padding: 3px 15px;\r\n        color: #fff;\r\n        background: #4b4;\r\n        }\r\n        `\r\n\r\nexport const formField = css`\r\n        max-width: 100%;\r\n        width: 300px;\r\n        resize: none;\r\n        padding: 5px 15px;\r\n        font-family: inherit;\r\n        font-size: inherit;\r\n        `\r\n\r\nexport const errorMassage = css`\r\n        text-align: center;\r\n        line-height: 20px;\r\n        margin-bottom: -20px;\r\n        color: #f00;\r\n        `\r\n\r\n","import React from 'react';\r\nimport ReactModal from 'react-modal';\r\nimport {Formik, Form, Field, ErrorMessage} from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {css}  from '@emotion/css';\r\nimport {H2, H3, Div, formField, errorMassage, closePopupBtn, addWorkoutBtn} from '../Styled';\r\n\r\nconst validationSchema = Yup.object({\r\n    type: Yup.string()\r\n      .required('Выберите тип тренировки'),\r\n    date: Yup.string()\r\n      .required('Заполните поле'),\r\n    distance: Yup.number()\r\n      .positive('Введите значение больше 0')\r\n      .required('Заполните поле')\r\n});\r\n\r\nconst Popup = (props) => {\r\n\r\n    const [modalIsOpen,setIsOpen] = React.useState(false);\r\n\r\n    const openModal = () => {\r\n        setIsOpen(true);\r\n    };\r\n\r\n    const closeModal = () => {\r\n        setIsOpen(false);\r\n    };\r\n\r\n    const onSubmit = (value) => {\r\n        if (window.confirm('Сохранить тренировку?')) {\r\n            props.manageRow(value)\r\n            closeModal();\r\n        }\r\n    };\r\n\r\n    const initialValues = {\r\n        type: props.defaultValues?.type || '',\r\n        date: props.defaultValues?.date || '',\r\n        distance: props.defaultValues?.distance || '',\r\n        description: props.defaultValues?.description || '',\r\n        key: props.defaultValues?.key || ''\r\n    };\r\n\r\n    return (\r\n        <div className={css`\r\n            display: inline;\r\n        `}>\r\n            <button\r\n                onClick={openModal}\r\n                className={props.class}\r\n            >\r\n                {props.modalBtnType}\r\n            </button>\r\n            <ReactModal\r\n                isOpen={modalIsOpen}\r\n                onRequestClose={closeModal}\r\n                ariaHideApp={false}\r\n            >\r\n                <H2>Информация о тренировке</H2>\r\n                <Formik\r\n                    initialValues={initialValues}\r\n                    validationSchema={validationSchema}\r\n                    onSubmit={onSubmit}\r\n                >\r\n                    <Form className={css`\r\n                        display: flex;\r\n                        flex-direction: column;\r\n                        align-items: center;\r\n                    `}>\r\n                        <Div>\r\n                            <H3>Выберите тип тренировки</H3>\r\n                            <Div className='workoutType'>\r\n                            {props.typeList.map( (type, index) => {\r\n                                if (index > 0) {\r\n                                    return (\r\n                                        <label\r\n                                            key={index}\r\n                                            htmlFor={type.id}\r\n                                        >\r\n                                            <Field\r\n                                                value={type.value}\r\n                                                type='radio'\r\n                                                id={type.id}\r\n                                                name='type'\r\n                                            />\r\n                                            {type.value}\r\n                                        </label>\r\n                                    )\r\n                                }\r\n                                return null\r\n                            }\r\n                            )}\r\n                            </Div>\r\n                            <ErrorMessage\r\n                                name='type'\r\n                                component='p'\r\n                                className={errorMassage}\r\n                            />\r\n                        </Div>\r\n                        <Div>\r\n                            <H3>Дата тренировки</H3>\r\n                            <label htmlFor='date'></label>\r\n                            <Field\r\n                                type='date'\r\n                                id='date'\r\n                                name='date'\r\n                                className={formField}\r\n                            />\r\n                            <ErrorMessage\r\n                                name='date'\r\n                                component='p'\r\n                                className={errorMassage}\r\n                            />\r\n                        </Div>\r\n                        <Div>\r\n                            <H3>Километраж</H3>\r\n                            <label htmlFor='distance'></label>\r\n                            <Field\r\n                                type='number'\r\n                                id='distance'\r\n                                name='distance'\r\n                                className={formField}\r\n                            />\r\n                            <ErrorMessage\r\n                                name='distance'\r\n                                component='p'\r\n                                className={errorMassage}\r\n                            />\r\n                        </Div>\r\n                        <Div>\r\n                            <H3>Комментарий</H3>\r\n                            <label htmlFor='description'></label>\r\n                            <Field\r\n                                component='textarea'\r\n                                id='description'\r\n                                name='description'\r\n                                placeholder='Заметки о тренировке'\r\n                                maxLength='60'\r\n                                className={formField}\r\n                            />\r\n                        </Div>\r\n                        <button\r\n                            className={addWorkoutBtn}\r\n                            type='submit'\r\n                        >\r\n                            {props.AcceptBtnType}\r\n                        </button>\r\n                        <button\r\n                            type='button'\r\n                            className={closePopupBtn}\r\n                            onClick={closeModal}\r\n                        >\r\n                            Закрыть\r\n                        </button>\r\n                    </Form>\r\n                </Formik>\r\n            </ReactModal>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Popup;","import { useState } from 'react';\r\n\r\nconst useSortableData = (items, config = null) => {\r\n    const [sortConfig, setSortConfig] = useState(config);\r\n\r\n    let sortableItems = [...items];\r\n    if (sortConfig !== null) {\r\n        sortableItems.sort((a, b) => {\r\n            if (a[sortConfig.key] < b[sortConfig.key]) {\r\n                return sortConfig.direction === 'ascending' ? -1 : 1;\r\n            }\r\n            if (a[sortConfig.key] > b[sortConfig.key]) {\r\n                return sortConfig.direction === 'ascending' ? 1 : -1;\r\n            }\r\n            return 0;\r\n        })\r\n    }\r\n\r\n    const requestSort = key => {\r\n        let direction = 'ascending';\r\n        if (\r\n            sortConfig &&\r\n            sortConfig.key === key &&\r\n            sortConfig.direction === 'ascending'\r\n        ) {\r\n            direction = 'descending';\r\n        }\r\n        setSortConfig({ key, direction });\r\n    };\r\n\r\n    return { items: sortableItems, requestSort, sortConfig };\r\n}\r\n\r\nexport default useSortableData;","export const ADD_WORKOUT = 'ADD_WORKOUT';\r\nexport const DELETE_WORKOUT = 'DELETE_WORKOUT';\r\nexport const EDIT_WORKOUT = 'EDIT_WORKOUT';\r\nexport const FILTER_WORKOUTS = 'FILTER_WORKOUTS';\r\nexport const GET_WORKOUTS = 'GET_WORKOUTS';\r\n\r\nexport const typeList = [\r\n    { value: 'Без фильтра', id: 'noFilter' },\r\n    { value: 'Бег', id: 'run' },\r\n    { value: 'Велосипед', id: 'bike' },\r\n    { value: 'Лыжи', id: 'ski' },\r\n    { value: 'Ходьба', id: 'walking' },\r\n];","import {ADD_WORKOUT, DELETE_WORKOUT, EDIT_WORKOUT, FILTER_WORKOUTS, GET_WORKOUTS} from './types';\r\nimport {workoutStore} from '../index';\r\n\r\nexport async function getWorkouts() {\r\n    const response = await fetch('/api/workouts', {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json; charset=utf-8'\r\n        }\r\n    });\r\n    const result = await response.json();\r\n\r\n    return workoutStore.dispatch({\r\n        type: GET_WORKOUTS,\r\n        payload: result\r\n    });\r\n}\r\n\r\nexport async function addWorkout(workout) {\r\n    const response = await fetch('/api/workouts', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json; charset=utf-8'\r\n        },\r\n        body: JSON.stringify(workout)\r\n    });\r\n    const result = await response.json();\r\n\r\n    return workoutStore.dispatch({\r\n        type: ADD_WORKOUT,\r\n        payload: result\r\n    });\r\n}\r\n\r\nexport async function deleteWorkout(key) {\r\n    const response = await fetch('/api/workouts/' + key, {\r\n        method: 'DELETE',\r\n        headers: {\r\n            'Content-Type': 'application/json; charset=utf-8'\r\n        },\r\n    });\r\n    const result = await response.json();\r\n\r\n    return workoutStore.dispatch({\r\n        type: DELETE_WORKOUT,\r\n        payload:  result\r\n    });\r\n}\r\n\r\nexport async function editWorkout(workout) {\r\n    const response = await fetch('/api/workouts', {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Content-Type': 'application/json; charset=utf-8'\r\n        },\r\n        body: JSON.stringify(workout)\r\n    });\r\n    const result = await response.json();\r\n\r\n    return workoutStore.dispatch({\r\n        type: EDIT_WORKOUT,\r\n        payload:  result\r\n    });\r\n}\r\n\r\nexport function filterWorkouts(event) {\r\n    return workoutStore.dispatch({\r\n        type: FILTER_WORKOUTS,\r\n        payload:  event\r\n    });\r\n}\r\n","import React from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {Table, Td, Th, Button, H1, P, Select, deleteBtn, editBtn, addWorkoutBtn, Wrapper} from '../Styled';\r\nimport Popup from '../Popup/Popup';\r\nimport useSortableData from './SortableData';\r\nimport {typeList} from '../../store/types';\r\nimport {addWorkout, deleteWorkout, editWorkout, filterWorkouts} from '../../store/actions';\r\n\r\nconst WorkoutTable = () => {\r\n    const workouts = useSelector(store => store.workouts);\r\n    const filterType = useSelector(store => store.filterType);\r\n\r\n    const filteredWorkouts = workouts.filter( item => {\r\n        if (filterType !== 'Без фильтра') {\r\n            return item.type === filterType;\r\n        }\r\n        return workouts;\r\n    });\r\n\r\n    const { items, requestSort, sortConfig } = useSortableData(filteredWorkouts);\r\n    const getClassNamesFor = (name) => {\r\n        if (!sortConfig) {\r\n            return;\r\n        }\r\n        return sortConfig.key === name ? sortConfig.direction : undefined;\r\n    };\r\n\r\n    const toggleSortType = (value) => {\r\n        requestSort(value.target.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <H1>BestRunner</H1>\r\n            <Wrapper>\r\n                <P>Фильтрация по типу тренировки</P>\r\n                <Select onChange={filterWorkouts}>\r\n                    {typeList.map( (type, index) => (\r\n                        <option\r\n                            key={index}\r\n                            value={type.value}\r\n                        >\r\n                            {type.value}\r\n                        </option>\r\n                    ))}\r\n                </Select>\r\n            </Wrapper>\r\n            <Table>\r\n                <thead>\r\n                <tr>\r\n                    <Th>\r\n                        <Button\r\n                            type='button'\r\n                            value='date'\r\n                            onClick={toggleSortType}\r\n                            className={getClassNamesFor('date')}\r\n                        >\r\n                            Дата тренировки\r\n                        </Button>\r\n                    </Th>\r\n                    <Th>\r\n                        <Button\r\n                            type='button'\r\n                            value='type'\r\n                            onClick={toggleSortType}\r\n                            className={getClassNamesFor('type')}\r\n                        >\r\n                            Тип тренировки\r\n                        </Button>\r\n                    </Th>\r\n                    <Th>\r\n                        <Button\r\n                            type='button'\r\n                            value='distance'\r\n                            onClick={toggleSortType}\r\n                            className={getClassNamesFor('distance')}\r\n                        >\r\n                            Километраж\r\n                        </Button>\r\n                    </Th>\r\n                    <Th>\r\n                        Комментарии\r\n                    </Th>\r\n                    <Th>\r\n                        Управление\r\n                    </Th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {items.map((item, index) => (\r\n                        <tr key={item.key}>\r\n                            <Td>{item.date}</Td>\r\n                            <Td>{item.type}</Td>\r\n                            <Td>{item.distance}</Td>\r\n                            <Td>{item.description}</Td>\r\n                            <Td>\r\n                                <Popup\r\n                                    manageRow={editWorkout}\r\n                                    typeList={typeList}\r\n                                    AcceptBtnType='Редактировать тренировку'\r\n                                    defaultValues={items[index]}\r\n                                    class={editBtn}\r\n                                />\r\n                                <button\r\n                                    onClick={() => deleteWorkout(item.key)}\r\n                                    className={deleteBtn}\r\n                                >\r\n                                </button>\r\n                            </Td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </Table>\r\n            <Popup\r\n                manageRow={addWorkout}\r\n                typeList={typeList}\r\n                class={addWorkoutBtn}\r\n                modalBtnType='Добавить тренировку'\r\n                AcceptBtnType='Добавить тренировку'\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nWorkoutTable.propTypes = {\r\n    workouts: PropTypes.arrayOf(PropTypes.object)\r\n}\r\n\r\nexport default WorkoutTable;","import React from 'react';\r\nimport WorkoutTable from './components/SportTable/Table';\r\nimport {container} from './components/Styled';\r\nimport {getWorkouts} from \"./store/actions\";\r\n\r\nfunction App() {\r\n\r\n    React.useEffect(()=> getWorkouts(), []);\r\n\r\n    return (\r\n        <div className={container}>\r\n            <WorkoutTable />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {ADD_WORKOUT, DELETE_WORKOUT, EDIT_WORKOUT, FILTER_WORKOUTS, GET_WORKOUTS} from './types';\r\n\r\nexport const initialState = {\r\n    workouts: [],\r\n    filterType: 'Без фильтра'\r\n};\r\n\r\nexport const workoutsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_WORKOUTS:\r\n            return getWorkouts(state, action.payload);\r\n        case ADD_WORKOUT:\r\n            return addWorkout(state, action.payload);\r\n        case DELETE_WORKOUT:\r\n            return deleteWorkout(state, action.payload);\r\n        case EDIT_WORKOUT:\r\n            return editWorkout(state, action.payload);\r\n        case FILTER_WORKOUTS:\r\n            return filterWorkouts(state, action.payload);\r\n        default: return state;\r\n    }\r\n};\r\n\r\nconst getWorkouts = (state, workouts) => {\r\n    return {...state, workouts: workouts};\r\n}\r\n\r\nconst addWorkout = (state, workout) => {\r\n    return {...state, workouts: [...state.workouts, workout]};\r\n};\r\n\r\nconst deleteWorkout = (state, workout ) => {\r\n    const newState = state\r\n    const index =  newState.workouts.findIndex(item => item.key === workout.key);\r\n    newState.workouts.splice(index, 1);\r\n    return {...newState, workouts: [...newState.workouts]};\r\n};\r\n\r\nconst editWorkout = (state, { key, type, date, distance, description }) => {\r\n    const newState = state\r\n    const index = newState.workouts.findIndex(item => item.key === key);\r\n    newState.workouts[index] = {\r\n        type,\r\n        date,\r\n        distance,\r\n        description,\r\n        key\r\n    };\r\n    return {...newState, workouts: [...newState.workouts]};\r\n};\r\n\r\nconst filterWorkouts = (state, event) => {\r\n    const newState = state\r\n    newState.filterType = event.target.value;\r\n    return {...newState, filterType: newState.filterType};\r\n};\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {applyMiddleware, compose, createStore} from 'redux';\r\nimport {Provider} from 'react-redux';\r\nimport logger from 'redux-logger';\r\nimport thunk from 'redux-thunk';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {initialState, workoutsReducer} from './store/reducer';\r\n\r\nexport const workoutStore = createStore(workoutsReducer, initialState, compose(\r\n    applyMiddleware(logger, thunk)\r\n))\r\n\r\nconst app = (\r\n    <Provider store={workoutStore}>\r\n        <App />\r\n    </Provider>\r\n)\r\n\r\nReactDOM.render(app, document.getElementById('root'));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n\r\n"],"sourceRoot":""}