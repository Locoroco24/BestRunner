{"version":3,"sources":["components/Styled.js","components/Popup/Popup.jsx","components/SportTable/SortableData.js","store/types.js","store/actions.js","components/SportTable/Table.jsx","App.js","reportWebVitals.js","store/reducer.js","index.js"],"names":["container","css","Table","styled","table","Th","th","Td","td","hover","Button","button","wideBtn","addWorkoutBtn","closePopupBtn","H1","h1","H2","h2","H3","h3","P","p","Select","select","Div","div","manageBtn","deleteBtn","editBtn","formField","errorMassage","Popup","props","React","useState","modalIsOpen","setIsOpen","closeModal","defaultValues","type","date","distance","description","key","initialValues","validationSchema","Yup","required","positive","className","onClick","class","modalBtnType","isOpen","onRequestClose","ariaHideApp","onSubmit","value","window","confirm","manageRow","typeList","map","index","htmlFor","id","name","component","placeholder","maxLength","AcceptBtnType","useSortableData","items","config","sortConfig","setSortConfig","sortedItems","useMemo","sortableItems","sort","a","b","direction","requestSort","ADD_WORKOUT","DELETE_WORKOUT","EDIT_WORKOUT","FILTER_WORKOUTS","GET_WORKOUTS","addWorkout","workout","fetch","method","headers","body","JSON","stringify","response","json","result","workoutStore","dispatch","payload","f","editWorkout","filterWorkouts","event","WorkoutTable","workouts","useSelector","store","filterType","filteredWorkouts","filter","item","getClassNamesFor","undefined","onChange","deleteWorkout","App","useEffect","getWorkouts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","state","findIndex","splice","target","createStore","action","compose","applyMiddleware","logger","thunk","app","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.34262f27.chunk.js","sourcesContent":["import styled from '@emotion/styled';\r\nimport {css} from '@emotion/css';\r\n\r\nexport const container = css`\r\n        width: 100%;\r\n        max-width: 1140px;\r\n        margin: 0 auto;\r\n        padding: 0 15px;\r\n        text-align: center;\r\n`\r\n\r\nexport const Table = styled.table`\r\n        margin-top: 20px;\r\n        width: 100%;\r\n        border: 3px #222 solid;\r\n        border-collapse: collapse;\r\n        `\r\n\r\nexport const Th = styled.th`\r\n        border: 3px #222 solid;\r\n        padding: 5px 25px;\r\n        color: #fff;\r\n        background: linear-gradient(0deg, #555, #000);\r\n        `\r\n\r\nexport const Td = styled.td`\r\n        border: 2px #222 solid;\r\n        padding: 5px 10px;\r\n        background: #fff;\r\n        text-align: center;\r\n        `\r\n\r\nconst hover = `\r\n        &:hover {\r\n        cursor: pointer;\r\n        opacity: 0.75;\r\n        }`\r\n\r\nexport const Button = styled.button`\r\n        position: relative;\r\n        background: none;\r\n        color: #fff;\r\n        font-family: inherit;\r\n        font-weight: inherit;\r\n        font-size: inherit;\r\n        border: none;\r\n        outline: none;\r\n        transition: opacity .4s;\r\n        ${hover}\r\n        &.ascending {\r\n            &:after {\r\n                content: '\\\\2B07';\r\n                position: absolute;\r\n                right: -15px;\r\n            }\r\n        }\r\n        &.descending {\r\n            &:after {\r\n                content: '\\\\2B06';\r\n                position: absolute;\r\n                right: -15px;\r\n            }\r\n        }\r\n        `\r\n\r\nexport const wideBtn = css`\r\n        max-width: 100%;\r\n        width: 300px;\r\n        padding: 5px 15px;\r\n        text-transform: uppercase;\r\n        font-family: inherit;\r\n        font-weight: inherit;\r\n        font-size: inherit;\r\n        border: none;\r\n        outline: none;\r\n        `\r\n\r\nexport const addWorkoutBtn = css`\r\n        ${wideBtn}\r\n        margin: 40px 0 15px;\r\n        color: #fff;\r\n        background: #000;\r\n        ${hover}\r\n        `\r\n\r\nexport const closePopupBtn = css`\r\n        ${wideBtn}\r\n        margin-bottom: 15px;\r\n        color: #222;\r\n        background: #ddd;\r\n        ${hover}\r\n        `\r\n\r\nexport const H1 = styled.h1`\r\n        margin-top: 30px;\r\n        text-align: center;\r\n        `\r\n\r\nexport const H2 = styled.h2`\r\n        text-align: center;\r\n        margin-bottom: 10px;\r\n        `\r\n\r\nexport const H3 = styled.h3`\r\n        text-align: center;\r\n        margin: 25px 0 15px;\r\n        `\r\n\r\nexport const P = styled.p`\r\n        margin-right: 20px;\r\n        `\r\n\r\nexport const Select = styled.select`\r\n        padding: 5px 10px;\r\n        &:hover {\r\n        cursor: pointer;\r\n        }\r\n        `\r\n\r\nexport const Div = styled.div`\r\n        max-width: 100%;\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        &.workoutType {\r\n        width: 300px;\r\n        flex-direction: row;\r\n        justify-content: space-between;\r\n        }\r\n        `\r\n\r\nexport const manageBtn = `\r\n        margin: 0 5px;\r\n        padding: 0;\r\n        border: none;\r\n        background: none;\r\n        outline: none;\r\n        transition: opacity .4s;\r\n        ${hover}\r\n        `\r\n\r\nexport const deleteBtn = css`\r\n        ${manageBtn}\r\n        &:after {\r\n        content: \"\\\\2716\";\r\n        border-radius: 3px;\r\n        padding: 3px 15px;\r\n        color: #fff;\r\n        background: #b44;\r\n        }\r\n        `\r\n\r\nexport const editBtn = css`\r\n        ${manageBtn}\r\n        &:after {\r\n        content: \"\\\\270E\";\r\n        border-radius: 3px;\r\n        padding: 3px 15px;\r\n        color: #fff;\r\n        background: #4b4;\r\n        }\r\n        `\r\n\r\nexport const formField = css`\r\n        max-width: 100%;\r\n        width: 300px;\r\n        resize: none;\r\n        padding: 5px 15px;\r\n        font-family: inherit;\r\n        font-size: inherit;\r\n        `\r\n\r\nexport const errorMassage = css`\r\n        text-align: center;\r\n        line-height: 20px;\r\n        margin-bottom: -20px;\r\n        color: #f00;\r\n        `\r\n\r\n","import React from 'react';\r\nimport ReactModal from 'react-modal';\r\nimport {Formik, Form, Field, ErrorMessage} from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {css}  from '@emotion/css';\r\nimport {H2, H3, Div, formField, errorMassage, closePopupBtn, addWorkoutBtn} from '../Styled';\r\n\r\nconst Popup = (props) => {\r\n\r\n    const [modalIsOpen,setIsOpen] = React.useState(false);\r\n\r\n    const openModal = () => {\r\n        setIsOpen(true);\r\n    };\r\n\r\n    const closeModal = () => {\r\n        setIsOpen(false);\r\n    };\r\n\r\n    let defaultValues = {\r\n        type: '',\r\n        date: '',\r\n        distance: '',\r\n        description: '',\r\n        key: ''\r\n    };\r\n\r\n    if (props.defaultValues) {\r\n        defaultValues = props.defaultValues;\r\n    }\r\n\r\n    const onSubmit = (value) => {\r\n        if (window.confirm('Сохранить тренировку?')) {\r\n            props.manageRow(value)\r\n            closeModal();\r\n        }\r\n    };\r\n\r\n    const initialValues = {\r\n        type: defaultValues.type,\r\n        date: defaultValues.date,\r\n        distance: defaultValues.distance,\r\n        description: defaultValues.description,\r\n        key: defaultValues.key\r\n    };\r\n\r\n    const validationSchema = Yup.object({\r\n        type: Yup.string()\r\n            .required('Выберите тип тренировки'),\r\n        date: Yup.string()\r\n            .required('Заполните поле'),\r\n        distance: Yup.number()\r\n            .positive('Введите значение больше 0')\r\n            .required('Заполните поле')\r\n    });\r\n\r\n    return (\r\n        <div className={css`\r\n            display: inline;\r\n        `}>\r\n            <button\r\n                onClick={openModal}\r\n                className={props.class}\r\n            >\r\n                {props.modalBtnType}\r\n            </button>\r\n            <ReactModal\r\n                isOpen={modalIsOpen}\r\n                onRequestClose={closeModal}\r\n                ariaHideApp={false}\r\n            >\r\n                <H2>Информация о тренировке</H2>\r\n                <Formik\r\n                    initialValues={initialValues}\r\n                    validationSchema={validationSchema}\r\n                    onSubmit={onSubmit}\r\n                >\r\n                    <Form className={css`\r\n                        display: flex;\r\n                        flex-direction: column;\r\n                        align-items: center;\r\n                    `}>\r\n                        <Div>\r\n                            <H3>Выберите тип тренировки</H3>\r\n                            <Div className='workoutType'>\r\n                            {props.typeList.map( (type, index) => {\r\n                                if (index > 0) {\r\n                                    return (\r\n                                        <label\r\n                                            key={index}\r\n                                            htmlFor={type.id}\r\n                                        >\r\n                                            <Field\r\n                                                value={type.value}\r\n                                                type='radio'\r\n                                                id={type.id}\r\n                                                name='type'\r\n                                            />\r\n                                            {type.value}\r\n                                        </label>\r\n                                    )\r\n                                }\r\n                                return null\r\n                            }\r\n                            )}\r\n                            </Div>\r\n                            <ErrorMessage\r\n                                name='type'\r\n                                component='p'\r\n                                className={errorMassage}\r\n                            />\r\n                        </Div>\r\n                        <Div>\r\n                            <H3>Дата тренировки</H3>\r\n                            <label htmlFor='date'></label>\r\n                            <Field\r\n                                type='date'\r\n                                id='date'\r\n                                name='date'\r\n                                className={formField}\r\n                            />\r\n                            <ErrorMessage\r\n                                name='date'\r\n                                component='p'\r\n                                className={errorMassage}\r\n                            />\r\n                        </Div>\r\n                        <Div>\r\n                            <H3>Километраж</H3>\r\n                            <label htmlFor='distance'></label>\r\n                            <Field\r\n                                type='number'\r\n                                id='distance'\r\n                                name='distance'\r\n                                className={formField}\r\n                            />\r\n                            <ErrorMessage\r\n                                name='distance'\r\n                                component='p'\r\n                                className={errorMassage}\r\n                            />\r\n                        </Div>\r\n                        <Div>\r\n                            <H3>Комментарий</H3>\r\n                            <label htmlFor='description'></label>\r\n                            <Field\r\n                                component='textarea'\r\n                                id='description'\r\n                                name='description'\r\n                                placeholder='Заметки о тренировке'\r\n                                maxLength='60'\r\n                                className={formField}\r\n                            />\r\n                        </Div>\r\n                        <button\r\n                            className={addWorkoutBtn}\r\n                            type='submit'\r\n                        >\r\n                            {props.AcceptBtnType}\r\n                        </button>\r\n                        <button\r\n                            type='button'\r\n                            className={closePopupBtn}\r\n                            onClick={closeModal}\r\n                        >\r\n                            Закрыть\r\n                        </button>\r\n                    </Form>\r\n                </Formik>\r\n            </ReactModal>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Popup;","import { useState, useMemo } from 'react';\r\n\r\nconst useSortableData = (items, config = null) => {\r\n    const [sortConfig, setSortConfig] = useState(config);\r\n\r\n    const sortedItems = useMemo(() => {\r\n        let sortableItems = [...items];\r\n        if (sortConfig !== null) {\r\n            sortableItems.sort((a, b) => {\r\n                if (a[sortConfig.key] < b[sortConfig.key]) {\r\n                    return sortConfig.direction === 'ascending' ? -1 : 1;\r\n                }\r\n                if (a[sortConfig.key] > b[sortConfig.key]) {\r\n                    return sortConfig.direction === 'ascending' ? 1 : -1;\r\n                }\r\n                return 0;\r\n            })\r\n        }\r\n        return sortableItems;\r\n    }, [items, sortConfig]);\r\n\r\n\r\n    const requestSort = key => {\r\n        let direction = 'ascending';\r\n        if (\r\n            sortConfig &&\r\n            sortConfig.key === key &&\r\n            sortConfig.direction === 'ascending'\r\n        ) {\r\n            direction = 'descending';\r\n        }\r\n        setSortConfig({ key, direction });\r\n    };\r\n\r\n    return { items: sortedItems, requestSort, sortConfig };\r\n}\r\n\r\nexport default useSortableData;","export const ADD_WORKOUT = 'ADD_WORKOUT';\r\nexport const DELETE_WORKOUT = 'DELETE_WORKOUT';\r\nexport const EDIT_WORKOUT = 'EDIT_WORKOUT';\r\nexport const FILTER_WORKOUTS = 'FILTER_WORKOUTS';\r\nexport const GET_WORKOUTS = 'GET_WORKOUTS';\r\n\r\nexport const typeList = [\r\n    { value: 'Без фильтра', id: 'noFilter' },\r\n    { value: 'Бег', id: 'run' },\r\n    { value: 'Велосипед', id: 'bike' },\r\n    { value: 'Лыжи', id: 'ski' },\r\n    { value: 'Хотьба', id: 'walking' },\r\n];","import {ADD_WORKOUT, DELETE_WORKOUT, EDIT_WORKOUT, FILTER_WORKOUTS, GET_WORKOUTS} from './types';\r\nimport {workoutStore} from '../index';\r\n\r\nexport function getWorkouts() {\r\n    async function f() {\r\n        const response = await fetch('/api/workouts', {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json; charset=utf-8'\r\n            }\r\n        });\r\n        const result = await response.json();\r\n\r\n        return workoutStore.dispatch({\r\n            type: GET_WORKOUTS,\r\n            payload: result\r\n        });\r\n    }\r\n    return f();\r\n}\r\n\r\nexport function addWorkout(workout) {\r\n    async function f() {\r\n        const response = await fetch('/api/workouts', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json; charset=utf-8'\r\n            },\r\n            body: JSON.stringify(workout)\r\n        });\r\n        const result = await response.json();\r\n\r\n        return workoutStore.dispatch({\r\n            type: ADD_WORKOUT,\r\n            payload: result\r\n        });\r\n    }\r\n    return f();\r\n}\r\n\r\nexport function deleteWorkout(key) {\r\n    async function f() {\r\n        const response = await fetch('/api/workouts/' + key, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Content-Type': 'application/json; charset=utf-8'\r\n            },\r\n        });\r\n        const result = await response.json();\r\n\r\n        return workoutStore.dispatch({\r\n            type: DELETE_WORKOUT,\r\n            payload:  result\r\n        });\r\n    }\r\n    return f();\r\n}\r\n\r\nexport function editWorkout(workout) {\r\n    async function f() {\r\n        const response = await fetch('/api/workouts', {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json; charset=utf-8'\r\n            },\r\n            body: JSON.stringify(workout)\r\n        });\r\n        const result = await response.json();\r\n\r\n        return workoutStore.dispatch({\r\n            type: EDIT_WORKOUT,\r\n            payload:  result\r\n        });\r\n    }\r\n    return f();\r\n}\r\n\r\nexport function filterWorkouts(event) {\r\n    return workoutStore.dispatch({\r\n        type: FILTER_WORKOUTS,\r\n        payload:  event\r\n    });\r\n}\r\n","import React from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport {css} from '@emotion/css';\r\nimport PropTypes from 'prop-types';\r\nimport {Table, Td, Th, Button, H1, P, Select, deleteBtn, editBtn, addWorkoutBtn} from '../Styled';\r\nimport Popup from '../Popup/Popup';\r\nimport useSortableData from './SortableData';\r\nimport {typeList} from '../../store/types';\r\nimport {addWorkout, deleteWorkout, editWorkout, filterWorkouts} from '../../store/actions';\r\n\r\nconst WorkoutTable = () => {\r\n    const workouts = useSelector(store => store.workouts);\r\n    const filterType = useSelector(store => store.filterType);\r\n\r\n    const filteredWorkouts = workouts.filter( item => {\r\n        if (filterType !== 'Без фильтра') {\r\n            return item.type === filterType;\r\n        }\r\n        return workouts;\r\n    });\r\n\r\n    const { items, requestSort, sortConfig } = useSortableData(filteredWorkouts);\r\n    const getClassNamesFor = (name) => {\r\n        if (!sortConfig) {\r\n            return;\r\n        }\r\n        return sortConfig.key === name ? sortConfig.direction : undefined;\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <H1>BestRunner</H1>\r\n            <div\r\n                className={css`\r\n                margin-top: 30px;\r\n                display: flex;\r\n                justify-content: flex-end;\r\n                align-items: center;\r\n            `}>\r\n                <P>Фильтрация по типу тренировки</P>\r\n                <Select onChange={filterWorkouts}>\r\n                    {typeList.map( (type, index) => (\r\n                        <option\r\n                            key={index}\r\n                            value={type.value}\r\n                        >\r\n                            {type.value}\r\n                        </option>\r\n                    ))}\r\n                </Select>\r\n            </div>\r\n            <Table>\r\n                <thead>\r\n                <tr>\r\n                    <Th>\r\n                        <Button\r\n                            type='button'\r\n                            onClick={() => requestSort('date')}\r\n                            className={getClassNamesFor('date')}\r\n                        >\r\n                            Дата тренировки\r\n                        </Button>\r\n                    </Th>\r\n                    <Th>\r\n                        <Button\r\n                            type='button'\r\n                            onClick={() => requestSort('type')}\r\n                            className={getClassNamesFor('type')}\r\n                        >\r\n                            Тип тренировки\r\n                        </Button>\r\n                    </Th>\r\n                    <Th>\r\n                        <Button\r\n                            type='button'\r\n                            onClick={() => requestSort('distance')}\r\n                            className={getClassNamesFor('distance')}\r\n                        >\r\n                            Километраж\r\n                        </Button>\r\n                    </Th>\r\n                    <Th>\r\n                        Комментарии\r\n                    </Th>\r\n                    <Th>\r\n                        Управление\r\n                    </Th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {items.map((item, index) => (\r\n                        <tr key={item.key}>\r\n                            <Td>{item.date}</Td>\r\n                            <Td>{item.type}</Td>\r\n                            <Td>{item.distance}</Td>\r\n                            <Td>{item.description}</Td>\r\n                            <Td>\r\n                                <Popup\r\n                                    manageRow={editWorkout}\r\n                                    typeList={typeList}\r\n                                    AcceptBtnType='Редактировать тренировку'\r\n                                    defaultValues={items[index]}\r\n                                    class={editBtn}\r\n                                />\r\n                                <button\r\n                                    onClick={() => deleteWorkout(item.key)}\r\n                                    className={deleteBtn}\r\n                                >\r\n                                </button>\r\n                            </Td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </Table>\r\n            <Popup\r\n                manageRow={addWorkout}\r\n                typeList={typeList}\r\n                class={addWorkoutBtn}\r\n                modalBtnType='Добавить тренировку'\r\n                AcceptBtnType='Добавить тренировку'\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nWorkoutTable.propTypes = {\r\n    workouts: PropTypes.arrayOf(PropTypes.object)\r\n}\r\n\r\nexport default WorkoutTable;","import React from 'react';\r\nimport WorkoutTable from './components/SportTable/Table';\r\nimport {container} from './components/Styled';\r\nimport {getWorkouts} from \"./store/actions\";\r\n\r\nfunction App() {\r\n\r\n    React.useEffect(()=> getWorkouts());\r\n\r\n    return (\r\n        <div className={container}>\r\n            <WorkoutTable />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {ADD_WORKOUT, DELETE_WORKOUT, EDIT_WORKOUT, FILTER_WORKOUTS, GET_WORKOUTS} from './types';\r\n\r\nexport const initialState = {\r\n    workouts: [],\r\n    filterType: 'Без фильтра'\r\n};\r\n\r\nexport const workoutsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_WORKOUTS:\r\n            return getWorkouts(state, action.payload);\r\n        case ADD_WORKOUT:\r\n            return addWorkout(state, action.payload);\r\n        case DELETE_WORKOUT:\r\n            return deleteWorkout(state, action.payload);\r\n        case EDIT_WORKOUT:\r\n            return editWorkout(state, action.payload);\r\n        case FILTER_WORKOUTS:\r\n            return filterWorkouts(state, action.payload);\r\n        default: return state;\r\n    }\r\n};\r\n\r\nconst getWorkouts = (state, workouts) => {\r\n    return {...state, workouts: workouts};\r\n}\r\n\r\nconst addWorkout = (state, workout) => {\r\n    return {...state, workouts: [...state.workouts, workout]};\r\n};\r\n\r\nconst deleteWorkout = (state, workout ) => {\r\n    const index =  state.workouts.findIndex(item => item.key === workout.key);\r\n    state.workouts.splice(index, 1);\r\n    return {...state, workouts: [...state.workouts]};\r\n};\r\n\r\nconst editWorkout = (state, { key, type, date, distance, description }) => {\r\n    const index = state.workouts.findIndex(item => item.key === key);\r\n    state.workouts[index] = {\r\n        type,\r\n        date,\r\n        distance,\r\n        description,\r\n        key\r\n    };\r\n    return {...state, workouts: [...state.workouts]};\r\n};\r\n\r\nconst filterWorkouts = (state, event) => {\r\n    state.filterType = event.target.value;\r\n    return {...state, filterType: state.filterType};\r\n};\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {applyMiddleware, compose, createStore} from 'redux';\r\nimport {Provider} from 'react-redux';\r\nimport logger from 'redux-logger'\r\nimport thunk from 'redux-thunk';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {initialState, workoutsReducer} from './store/reducer';\r\n\r\nexport const workoutStore = createStore(workoutsReducer, initialState, compose(\r\n    applyMiddleware(logger, thunk)\r\n))\r\n\r\nconst app = (\r\n    <Provider store={workoutStore}>\r\n        <App />\r\n    </Provider>\r\n)\r\n\r\nReactDOM.render(app, document.getElementById('root'));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n\r\n"],"sourceRoot":""}